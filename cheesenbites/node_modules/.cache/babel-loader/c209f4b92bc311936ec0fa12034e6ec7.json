{"ast":null,"code":"function flatDeep(arr){var d=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;return d>0?arr.reduce(function(acc,val){return acc.concat(Array.isArray(val)?flatDeep(val,d-1):val);},[]):arr.slice();}var slugify=function slugify(text){return text.toString().toLowerCase().replace(/\\s+/g,'-')// Replace spaces with -\n.replace(/[^\\w-]+/g,'')// Remove all non-word chars\n.replace(/--+/g,'-')// Replace multiple - with single -\n.replace(/^-+/,'')// Trim - from start of text\n.replace(/-+$/,'');// Trim - from end of text\n};function containsObject(obj,list){var i;for(i=0;i<list.length;i++){console.log();if(list[i].slug===obj.slug){return i;}}return-1;}export{flatDeep,slugify,containsObject};","map":{"version":3,"sources":["C:/Users/Aiz/Desktop/doob/src/utils/index.js"],"names":["flatDeep","arr","d","reduce","acc","val","concat","Array","isArray","slice","slugify","text","toString","toLowerCase","replace","containsObject","obj","list","i","length","console","log","slug"],"mappings":"AAAA,QAASA,CAAAA,QAAT,CAAkBC,GAAlB,CAA8B,IAAPC,CAAAA,CAAO,2DAAH,CAAG,CAC5B,MAAOA,CAAAA,CAAC,CAAG,CAAJ,CAAQD,GAAG,CAACE,MAAJ,CAAW,SAACC,GAAD,CAAMC,GAAN,QAAcD,CAAAA,GAAG,CAACE,MAAJ,CAAWC,KAAK,CAACC,OAAN,CAAcH,GAAd,EAAqBL,QAAQ,CAACK,GAAD,CAAMH,CAAC,CAAG,CAAV,CAA7B,CAA4CG,GAAvD,CAAd,EAAX,CAAsF,EAAtF,CAAR,CACQJ,GAAG,CAACQ,KAAJ,EADf,CAED,CAID,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAASC,IAAT,CAAe,CAC3B,MAAOA,CAAAA,IAAI,CACRC,QADI,GAEJC,WAFI,GAGJC,OAHI,CAGI,MAHJ,CAGY,GAHZ,CAGiB;AAHjB,CAIJA,OAJI,CAII,UAJJ,CAIgB,EAJhB,CAIoB;AAJpB,CAKJA,OALI,CAKI,MALJ,CAKY,GALZ,CAKiB;AALjB,CAMJA,OANI,CAMI,KANJ,CAMW,EANX,CAMe;AANf,CAOJA,OAPI,CAOI,KAPJ,CAOW,EAPX,CAAP,CAOsB;AACzB,CATD,CAWA,QAASC,CAAAA,cAAT,CAAwBC,GAAxB,CAA6BC,IAA7B,CAAmC,CACjC,GAAIC,CAAAA,CAAJ,CACA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGD,IAAI,CAACE,MAArB,CAA6BD,CAAC,EAA9B,CAAkC,CAClCE,OAAO,CAACC,GAAR,GACI,GAAIJ,IAAI,CAACC,CAAD,CAAJ,CAAQI,IAAR,GAAiBN,GAAG,CAACM,IAAzB,CAA+B,CAC3B,MAAOJ,CAAAA,CAAP,CACH,CACJ,CAED,MAAO,CAAC,CAAR,CACD,CAED,OAAQlB,QAAR,CAAkBU,OAAlB,CAA2BK,cAA3B","sourcesContent":["function flatDeep(arr, d = 1) {\r\n  return d > 0 ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\r\n               : arr.slice();\r\n}\r\n\r\n\r\n\r\nconst slugify = function(text) {\r\n    return text\r\n      .toString()\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, '-') // Replace spaces with -\r\n      .replace(/[^\\w-]+/g, '') // Remove all non-word chars\r\n      .replace(/--+/g, '-') // Replace multiple - with single -\r\n      .replace(/^-+/, '') // Trim - from start of text\r\n      .replace(/-+$/, '') // Trim - from end of text\r\n}\r\n\r\nfunction containsObject(obj, list) {\r\n  var i;\r\n  for (i = 0; i < list.length; i++) {\r\n  console.log()\r\n      if (list[i].slug === obj.slug) {\r\n          return i;\r\n      }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nexport {flatDeep, slugify, containsObject}"]},"metadata":{},"sourceType":"module"}