{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aiz\\\\Desktop\\\\doob\\\\src\\\\elements\\\\progressbar\\\\CircleProgressTwo.js\";\nimport React from 'react';\nimport { CircularProgressbar, CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport { easeQuadInOut } from \"d3-ease\";\nimport 'react-circular-progressbar/dist/styles.css';\nimport AnimatedProgressProvider from \"./AnimatedProgressProvider\";\nimport TrackVisibility from 'react-on-screen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst progressData = [{\n  id: 1,\n  title: \"Design\",\n  percantage: 25,\n  subtitle: \"Presentation your skill\",\n  strokeColor: \"#0f0f11\",\n  strokePath: \"#059DFF\",\n  strokeLinecap: 'round',\n  strokeWidth: 1\n}, {\n  id: 2,\n  title: \"Photoshop\",\n  percantage: 50,\n  subtitle: \"Presentation your skill\",\n  strokeColor: \"#0f0f11\",\n  strokePath: \"#FB5343\",\n  strokeLinecap: 'round',\n  strokeWidth: 5\n}, {\n  id: 3,\n  title: \"Application\",\n  percantage: 75,\n  subtitle: \"Presentation your skill\",\n  strokeColor: \"#0f0f11\",\n  strokePath: \"#E33FA1\",\n  strokeLinecap: 'round',\n  strokeWidth: 10\n}, {\n  id: 4,\n  title: \"Development\",\n  percantage: 90,\n  subtitle: \"Presentation your skill\",\n  strokeColor: \"#0f0f11\",\n  strokePath: \"#059DFF\",\n  strokeLinecap: 'round',\n  strokeWidth: 13\n}];\n\nconst CircleProgressTwo = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row row--30\",\n    children: progressData.map((progress, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-3 col-md-6 col-sm-6 col-12 mt--30\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rwt-circle text-center\",\n        children: [/*#__PURE__*/_jsxDEV(TrackVisibility, {\n          once: true,\n          children: ({\n            isVisible\n          }) => isVisible && /*#__PURE__*/_jsxDEV(AnimatedProgressProvider, {\n            valueStart: 0,\n            valueEnd: progress.percantage,\n            duration: 1.4,\n            easingFunction: easeQuadInOut,\n            repeat: false,\n            children: value => {\n              const roundedValue = Math.round(value);\n              return /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                value: value,\n                text: `${roundedValue}%`,\n                strokeWidth: progress.strokeWidth,\n                styles: {\n                  trail: {\n                    stroke: progress.strokeColor,\n                    transition: 'stroke-dashoffset 0.5s ease 0s'\n                  },\n                  text: {\n                    fill: '#adb5c4',\n                    fontSize: '16px',\n                    dominantBaseline: 'central',\n                    textAnchor: 'middle'\n                  },\n                  path: {\n                    stroke: progress.strokePath,\n                    strokeLinecap: progress.strokeLinecap\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"title\",\n            children: progress.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"subtitle\",\n            children: progress.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CircleProgressTwo;\nexport default CircleProgressTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CircleProgressTwo\");","map":{"version":3,"sources":["C:/Users/Aiz/Desktop/doob/src/elements/progressbar/CircleProgressTwo.js"],"names":["React","CircularProgressbar","CircularProgressbarWithChildren","buildStyles","easeQuadInOut","AnimatedProgressProvider","TrackVisibility","progressData","id","title","percantage","subtitle","strokeColor","strokePath","strokeLinecap","strokeWidth","CircleProgressTwo","map","progress","index","isVisible","value","roundedValue","Math","round","trail","stroke","transition","text","fill","fontSize","dominantBaseline","textAnchor","path"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    CircularProgressbar,\r\n    CircularProgressbarWithChildren,\r\n    buildStyles\r\n  } from \"react-circular-progressbar\";\r\nimport { easeQuadInOut } from \"d3-ease\";\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport AnimatedProgressProvider from \"./AnimatedProgressProvider\";\r\nimport TrackVisibility from 'react-on-screen';\r\n\r\nconst progressData = [\r\n    {\r\n      id: 1,\r\n      title: \"Design\",\r\n      percantage: 25,\r\n      subtitle: \"Presentation your skill\",\r\n      strokeColor: \"#0f0f11\",\r\n      strokePath: \"#059DFF\",\r\n      strokeLinecap: 'round',\r\n      strokeWidth: 1\r\n    },\r\n\r\n    {\r\n      id: 2,\r\n      title: \"Photoshop\",\r\n      percantage: 50,\r\n      subtitle: \"Presentation your skill\",\r\n      strokeColor: \"#0f0f11\",\r\n      strokePath: \"#FB5343\",\r\n      strokeLinecap: 'round',\r\n      strokeWidth: 5\r\n    },\r\n\r\n    {\r\n      id: 3,\r\n      title: \"Application\",\r\n      percantage: 75,\r\n      subtitle: \"Presentation your skill\",\r\n      strokeColor: \"#0f0f11\",\r\n      strokePath: \"#E33FA1\",\r\n      strokeLinecap: 'round',\r\n      strokeWidth: 10\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Development\",\r\n      percantage: 90,\r\n      subtitle: \"Presentation your skill\",\r\n      strokeColor: \"#0f0f11\",\r\n      strokePath: \"#059DFF\",\r\n      strokeLinecap: 'round',\r\n      strokeWidth: 13\r\n    },\r\n];\r\n\r\nconst CircleProgressTwo = () => {\r\n    return (\r\n        <div className=\"row row--30\">\r\n            {progressData.map((progress, index) => (\r\n            <div className=\"col-lg-3 col-md-6 col-sm-6 col-12 mt--30\" key={index}>\r\n                <div className=\"rwt-circle text-center\">\r\n                    <TrackVisibility once>\r\n                        {({ isVisible }) => isVisible && \r\n                            <AnimatedProgressProvider\r\n                                valueStart={0}\r\n                                valueEnd={progress.percantage}\r\n                                duration={1.4}\r\n                                easingFunction={easeQuadInOut}\r\n                                repeat= {false}\r\n                                \r\n                            >\r\n                                {value => {\r\n                                const roundedValue = Math.round(value);\r\n                                return (\r\n                                    <CircularProgressbar\r\n                                        value={value}\r\n                                        text={`${roundedValue}%`}\r\n                                        strokeWidth={progress.strokeWidth}\r\n                                        styles={\r\n                                            {\r\n                                                trail: {\r\n                                                    stroke: progress.strokeColor,\r\n                                                    transition: 'stroke-dashoffset 0.5s ease 0s',\r\n                                                },\r\n                                                text: {\r\n                                                    fill: '#adb5c4',\r\n                                                    fontSize: '16px',\r\n                                                    dominantBaseline: 'central',\r\n                                                    textAnchor: 'middle',\r\n                                                },\r\n                                                path: {\r\n                                                    stroke: progress.strokePath,\r\n                                                    strokeLinecap: progress.strokeLinecap,\r\n                                                },\r\n                                            }\r\n                                        }\r\n                                    />\r\n                                );\r\n                                }}\r\n                            </AnimatedProgressProvider>                            \r\n                        }\r\n                    </TrackVisibility>\r\n                    <div className=\"circle-info\">\r\n                        <h4 className=\"title\">{progress.title}</h4>\r\n                        <span className=\"subtitle\">{progress.subtitle}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            ))} \r\n        </div>\r\n    )\r\n}\r\nexport default CircleProgressTwo;"]},"metadata":{},"sourceType":"module"}